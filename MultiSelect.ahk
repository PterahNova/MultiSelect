#SingleInstance Force					; Replaces script if running.
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
;#Warn  ; Enable warnings to assist with detecting common errors.
SendMode Input  ; Recommended for new scripts due to its superior speed and reliability.
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
;Cobbled together by PterahNova

Config=MultiSelect.ini

Menu, tray, Icon, % "HBITMAP:*" . Create_PostInstall_ico()
Menu, Tray, NoStandard
Menu, Tray, Add, Save Selection, Save
Menu, Tray, Add, Exit, GuiClose
IniRead, AppName, %Config%, config, AppName
IniRead, ahk, %Config%, config, AutoHotKey
IniRead, ShowOutputBox, %Config%, config, ShowOutputBox
IniRead, RunAsAdmin, %Config%, config, RunAsAdmin

if (RunAsAdmin=1) {
	;restart script in admin mode
	if not (A_IsAdmin) {
	try {
		if A_IsCompiled
			Run *RunAs "%A_ScriptFullPath%" /restart
		else
			Run *RunAs "%ahk%" /restart "%A_ScriptFullPath%"
	}
	ExitApp
	}
}

Vars:
On:="HBITMAP:*" . Create_On_Png()
Off:="HBITMAP:*" . Create_Off_Png()
Button:="HBITMAP:*" . Create_Button_Png()
TitleL:="HBITMAP:*" . Create_TitleLeft_Png()
TitleR:="HBITMAP:*" . Create_TitleRight_Png()
Background:="HBITMAP:*" . Create_Background_Png()
Minimize:="HBITMAP:*" . Create_Minimize_Png()
Close:="HBITMAP:*" . Create_Close_Png()

Loop 10 {
	IniRead, Menu%A_Index%, %Config%, config, Item-%A_Index%-Menu
	IniRead, MSG%A_Index%, %Config%, config, Item-%A_Index%-MSG
	IniRead, Dir%A_Index%, %Config%, config, Item-%A_Index%-Dir
	IniRead, Args%A_Index%, %Config%, config, Item-%A_Index%-Args
	IniRead, Opt%A_Index%, %Config%, config, Item-%A_Index%-Install
	IniRead, Wait%A_Index%, %Config%, config, Item-%A_Index%-Wait, 0
}

GUI:
Gui, -Caption +e0x02000000 +e0x00080000 ; WS_EX_COMPOSITED & WS_EX_LAYERED => Double Buffer
Gui, Color, Black

Gui, Add, Picture, x0 y0 w289 h-1 gUImove, %TitleL%
Gui, Add, Picture, x289 y0 w71 h-1, %TitleR%
Gui, Add, Picture, x289 y14 w14 h-1 gMinimize, %Minimize%
Gui, Add, Picture, x332 y14 w14 h-1 gGuiClose, %Close%

Gui, Font, Verdana s19 cWhite
Gui, Add, Button, x-100 y5 w100 h30, Unused ;Stops focus on Edit Box and sets yp
loop 10{
	Text:=Menu%A_Index%
	Gui, Add, Text, x12 yp+47 w300 h30 +BackgroundTrans, %Text%
	Gui, Add, Picture, x290 yp w-1 h30 vOn%A_Index% gsub +BackgroundTrans,%On%
	Gui, Add, Picture, x290 yp w-1 h30 vOff%A_Index% gsub +BackgroundTrans,%Off%
	if(Opt%A_Index%=0) {
		GuiControl, Hide, On%A_Index%
	} else {
		GuiControl, Hide, Off%A_Index%
	}
}

Gui, Font, Impact s17 cA3A6AB
Gui, Add, Text, x285 Y559 +BackgroundTrans, Go
Gui, Add, Picture, x252 y559 w-1 h30 gSubmit, %Button%

Gui, Add, Text, x27 Y559 +BackgroundTrans, Clear
Gui, Add, Picture, x8 y559 w-1 h30 gClear, %Button%

if (ShowOutputBox=1) {
	Gui, Font, S16 cRED
	Gui, Color,, 3E4146
	Gui, Add, Edit, x125 y559 w110 h30 +Center +Uppercase +Limit8 voutput goutput
}

Gui, Font, Impact s17 cA3A6AB
Gui, Add, Text, x8 y601 w344 h31 vStatus +BackgroundTrans Center, Select Items
Gui, Add, Progress, x8 y601 w344 h31 c6F7071 Background3E4146 Range0-99 vOverallProgress, 0

Gui, Add, Picture, x0 y42 w360 h-1 , %Background%
Gui, Show, h640 w360, %AppName%
return


Clear(){
Loop 10{ ;<-- Number of options to check for.
Opt%A_Index%=0
GuiControl, Hide, On%A_Index%
GuiControl, Show, Off%A_Index%
}
return
}

output(){
global
gui, Submit, nohide
IniWrite, %output%, %Config%, temp, output
Return
}

;Button Presses
sub(){
Num:=StrReplace(A_GuiControl,"On")
Num:=StrReplace(Num,"Off")
if (Opt%Num%=0) {
	Opt%Num%=1
	GuiControl, Show, On%Num%
	GuiControl, Hide, Off%Num%
}else {
	Opt%Num%=0
	GuiControl, Show, Off%Num%
	GuiControl, Hide, On%Num%
}
return
}

UIMove(){
PostMessage, 0xA1, 2,,, A
Return
}

Minimize() {
Gui, Minimize
return
}

Submit(){
GuiControl,, OverallProgress, 0
Todo=0
Loop 10{ ;<-- Number of options to check for.
if (Opt%A_Index%=1) {
	Todo+=1
}
}
Todo := 100 / Todo

Apply:
Loop 10{ ;<-- Number of options to check for.
if (Opt%A_Index%=1) {
	Opt%A_Index%=0
	CurProg=%A_Index%
    Goto Actions
}
}
GuiControl, Text, Status, Finished
WinActivate, %AppName%
Gui, Flash
return

Actions:
DirNum:=Dir%CurProg%
ArgsNum:=Args%CurProg%
MSGNum:=MSG%CurProg%
GuiControl, Text, Status, %MSGNum%
if (Wait%CurProg%=1) {
	Run, %DirNum% %ArgsNum%
	}
else {
	RunWait, %DirNum% %ArgsNum%
	}
GuiControl, Show, Off%CurProg%
GuiControl, Hide, On%CurProg%
GuiControl,, OverallProgress, +%Todo%
Goto, Apply
}

Save(){
	Loop 10{
		Install:=Opt%A_Index%
		IniWrite, %Install%, %Config%, config, Item-%A_Index%-Install
	}
	GuiControl, Text, Status, Selection Saved
	return
}

Esc::
GuiClose:
IniWrite, "", %Config%, temp, output
ExitApp

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_Background_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 9432 << !!A_IsUnicode)
B64 := "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"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_Button_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 484 << !!A_IsUnicode)
B64 := "iVBORw0KGgoAAAANSUhEUgAAAGQAAAAeCAMAAADthUvBAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAA/UExURSwxNTA0OEhLTltdX2dpam9wcS4yNk5RU2xubzU5PWNlZmlrbG5vcGhqa1xeYElMTzE1OVBTVS8zN2ZoaTY6Pq/YgYcAAAAJcEhZcwAADsIAAA7CARUoSoAAAAC0SURBVEhL7da7DoQgFATQEURUFET9/29dcCfZYisTpuNUF0yc8ArgazB2dI2N1gz8fTX5mR8am/3ECCwr+wTWhRnBbexqbnPhSZmE46jWOmNeN45qc77sK9Ga/8wDDEshA8tKyKL5Gfw3goVUD3mlh7zSQ17BzkJoR2QlFJFYCSUc+kvrADJrmVzu+PNiQ+Q663PlDmxKhLtmlBThWC5mlBnLqmdqfuaKjhSbn8o9prKvAOADqa87CV0hzTMAAAAASUVORK5CYII="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_Close_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 440 << !!A_IsUnicode)
B64 := "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAABRUExURT1ART5BRkVITVhbYGVobVdaXz9CR2hrcJqdoqKlqqOmq5ueo2dqb0BDSDw/RHl8gaSnrKCjqHp9gqWorUZJTmRnbGZpbpyfpKaprpmcoWlscQffNQIAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACASURBVBhXLU/REoMgDEtBmS1MO2G67f8/dEHJQ6655tIUgEiI0zQHkS5Seixqark8k2DFpv5yNbedIpVqqmZWtZaEkI1OgpQbZu/zReYR73u42I4hB45hvkFzOJnJHFe3s0HKR/shqn5oxa5cs8ldgyW/TNbll1iSrdFfiE0E+AP4Agd36CWtWgAAAABJRU5ErkJggg=="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_Minimize_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 444 << !!A_IsUnicode)
B64 := "iVBORw0KGgoAAAANSUhEUgAAAA4AAAAOCAMAAAAolt3jAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAABaUExURT5BRj1ARUFESUlMUU5RVk1QVUhLUEBDSE9SV2Nma2ZpbmVobWFkaUxPVD9CR1daX2dqb1NWWzw/RFBTWGRnbEtOU0JFSkVITVJVWmdpbkpNUmhpbmhrcFRXXJ5KOO8AAAAJcEhZcwAADsMAAA7DAcdvqGQAAAB7SURBVBhXTY/bDsIwDEMdbmNO6QrdGGzw/7+JMxVEnnzkKHYAg+32h+OpkwjCuac708WyAAMLSSev8m61uHuhj14mw72X1SZlTE1uM+NBPhuQS+C6NhJqef3xrFOK0O2ISh2svqQVNrIsqpGHaBE13lE4o8b+t+TfC4YPKmcH4jPmqfMAAAAASUVORK5CYII="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_Off_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 2092 << !!A_IsUnicode)
B64 := "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"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_On_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 2176 << !!A_IsUnicode)
B64 := "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"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_PostInstall_ico(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 15668 << !!A_IsUnicode)
B64 := "AAABAAEAAAAAAAEAIADQLQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAALZdJREFUeNrtnX1wHNWZ7p/TH9PzoZHGkmXJFrZlG5CJIaAQAiSLZbFJHG7VvUTADeRSG+Ld2gpUbV0SSthL1S0I+WNZgyuJt3aXpGqzgmT3klCYMbn34pBdPLYgGIcQ8WFiG2xkGWNZ/tCHJWs0muk+949RSzPSjOaru8/pnvOrcpVmNOo+3Z7n6fec8573EAg8QXfs+SZZUdebr3UDrQRozfwMAb0WBJFFD0TJFAUOznvzjCSRI+arZEo/88POu46yvmZB5RDWDRCUxrbXoh2UGs2USuvnBE062bSG9oGSMxQ4SIETsoQTWnL0zR/cuiXB+j4JikMYAIc8GIvW+RVcpxv0JkLQRIDrALIewHLWbSsOOgLgHYAcoRRDkoR9eip5ZEfnN4ZYt0yQjTAADnh0b482qdRuIiCbCbAJIO2s22QThwHso8Ar0zr27ezsGmPdoGpHGAADTMFLkDoosIkAN7NuExtoHwX2AWS/MAQ2CANwiG2vRTsMA5sIoR3s+ux8Q4EDBNhnwNgfTF3cJ8YS7EcYgI10x6LXSjK+A+DrcE3/nRfoCIDdhJBnt9/StZ91a7yKMACL2RaLrtYleo9EyH0ArmLdHi9AQfsJyC9Tuv6smH60FmEAFvDo3h5tUo7cIwF3g+A21u3xNrSPUvyUGqndYlahcoQBVEB3767NEsjdFOQeAgRYt6fqoDQKQn/lT13cLcYLykMYQIk8urdHm5Ij94NgG0S/nhPoCAWeoXpqu4gKSkMYQJE8GIvW+SR8lxD6IECWsG6PYCEUiAP0J5JOdm7v7Bpg3R43IAygAN2x55skWX0QoPcL4bsJ2kN08rgwgsURBpCH7tjzTURWtgHkftG/dy+U4jlqYPuOzq53WbeFR4QBzGNbLLqayvQxgGxh3RaBhVAahUG3P9l558HKD+YdhAHMIIRfLdAYdPqIMII0VW8A6Tn8uu8SQh4ToX5V8XRCxyPVvv6gqg0gPY8v/QgiY69aGTQoHtnR0fUs64awoioNoDv2fBOR1B8Rgm+ybouAB2gspRsPVGOacdUZQPf+F7dJBNvElJ4gEwrECfBjf2r08WrKKqwaA9ga23UjZPK0h4ttCKxh0ICxZcfGO19h3RAn8LwBPBiL1mky/ZEY3ReUBMUew0hu8XpqsacNIF1AE89B5OwLyoKOAPSBJzfe+SvWLbELzxrAw/ujjxGC77Nuh8ATPO1PjX7Pi2MDnjOAdO6+8pwouyWwFtqX0o1vem2mQGLdACvp7t21WZLVPiF+gfWQdkWWDnTvj97HuiWWXhXrBljF1t7o3wF4hHU7BNUA7fGnxh7wQpfA9QaQXrWnRqu3tLaAEYdTut7l9i6Bq7sA6ZBfOSzEL2DAVbIs97m9S+BaA+je/+I2CdJvREafgBUECEgEz2ztjf4z67ZUcA3uY2vvi/8qEnsEXEGxx6+PdrltXMBVBpAuyFn3HAjpYt0WgWA+FDgwreM2Ny0xdo0BzKT0RsUUn4BzDhMdt7mlFqErDGAmuWePWMgjcAMUtJ/qpMsNdQi5N4BtsehqQ6YxArKGdVsEguKhI9DpbbyXHuN6FqA7Fr2WyrRPiF/gPsgSKkuxh3ujt7NuyWJwawDpOX4aE9N8ArdCgAABdvOcK8ClATzcG72dQIoK8Qu8gETwzMP7o4+xbkcuuBsD6O7dtZlAiooKvQKvQSm9/6mOO37Kuh2ZcGUA3bHotSLsF3gb4x6eCoxwYwAzG3P0CfELMlkTiiCi+bGurhFB1Yf6QGjRz5+7NI6EnsLxsXMYTUyh/9Io60vIggJxCqOLl5qDXBjAzD58B8Rov2BNKIIrI41YVdeAlXUN0BS1ouONT8Vxcuw8jo+ew+/OnmR9eTPQEUMnnTzkCTA3gJkMv5hI8qleWgJhtC9dgWuaViFS4AlfCSldx6mxC/h49BwODZ/Bp/FxhldNR4hO2llnDDI1gEf39mhTSt0ekd5bnVxd14hNq9qwMrLU0fMmUkn8+6EDODo+zPT6KWi/pJNOlibAdBpwSq4TtfuqkJZAGA9s+CL+4rNfqlrxAwABWUNlGn0wFq1j1wZGiCW91UejFsRXV7bhs8tXMzk/T+LPhsb8qbHbWCwlVlhc7kxShBB/lVCr+vDVy9rw2eZVFQ/qlQu/4gcA0jklR6IA/ovjZ3b6hOksP+x2+rwCNrQEwvjWhptsHdwrBN/in4NSfP+pjq7HnTynowbAeq4/FZ+GrKkgEvPJj6qgvb4ZXW3XM3vqA+4R/yy6cZOTKwgdU8Kje3u0uBKJsSrgOX0xjoFfvwdZJWi4YTVqW5cJI7CRL69Yh87Wz0CRZWZtSCSn8czvYzgyMQxZVSCr7IyoWCho/7RO2p2qKuTYGEBcqXuCtfiNeBJGHDjz6ke40PApGm9YjfDKBhZN8jT3Xt7ObKDPJJGcRs+br+LQcHpvz+RUAoQAsqrO/FNAJP7WwhGQNZpEewDc4cz5HKC7d9fmdAVf58kUfy7UhqAwAouoVX2498rPo7V+GdN2zBf/fAgh8NfWQGIYnRSE4rtPdnTttPs0thtAupyX2gcGO/QWEn8m/qYaNH6hFcHmiNPN9Ax/c82fOT6vPx9PiB/pNQNENzrtHg+wPQZKb9TJt/gBYGpoAp/8n0MY2PMuJs+MOt1c13Pv5e1C/BZCgACVyXN2JwnZagDp+X7nM/1KFX8mU6fG54zg3EWnm+5KNrdcwV2ffz5uEv9sm+fGA2w8h01sey3aQSn22dn4XFQi/lyE1tVj6bWr4G+ocfpSXEF7fTPuWn8D89F+r4k/E4Pi2zs6up6149i2GACrfr/V4s9EGMFCWgJhfOe6jWzn+T0ufiA9HqDrersdG5Ha0gWQZOUJeEj8AHDp+DAGXnwHp3uPYPpi3MlL45Ja1YdvbbhJiN8BCBBQZOlpm45tLSxCf7vFn4vaDcvQcPVK+Gqrs3Qh67n+ahF/JnZ0BSw1gJn1/QecLO7BQvyZ1G5Yhsb2VigBH5Pzs6BRC+K71/85s35/NYp/hsGEjquszBK0tAswKdd91+nKPpNDo8zEDwAXPziL4//2e5z9w8fQEylm7XCS21ZfJcTPhuWajCesPKBlBtAde76JEOJ47fO6dc1Qa9k/fUf6TuPs2x+zbobttIXrsaFpJZNzV7n4TR7ojkWvtepglhmAJClPs6jlT6T04h4euPjBWc8PEN66aj2T8wrxzyHJ1uUGWGIA3b27NoOQLlY3pLZ1GRdRAAAM/u5D1k2wjavrGpnk+QvxL7ji9of3v/gdK45UsQE8urdHIyC2TFEUfTs4igKmTo17NpV485qrHT+nEH9uCMET3bHnmyo9TsUGEJcjf8tDPf+alQ2QQ0wqnC3gXB/TSs+2sCYUwbKws7Ur3Sr+lkDYgbOQJTP5NhVRkQE8FHuhDQTbHLjaRTF0HYmJS6jdwHYZqokXo4Drlzk78OdW8f/l+hvw5yuvdOhsZMu216IdlRyhIgNQJOkJ1pt4GrqOqYsToJQi2LJERAE2sX7pCsfO5WbxtzW2YFWdc6siKaU/quTvyzaA7lj0WpYDfyZ6MgVKKYD0WICIAqynLVyPsN8Zn3e7+AEg7A9gTSji0JlJ+8O90dvL/euyDUCSKBf7nauaL6u2X7BlCdR6P+tmAfBOFHBFpNGR86R0Hf/21j5Xi9/k2qUtZR6tdAjK12JZBtAde76Jh6d/+uoJfIE5wROJoO6aZtatAuCdKKDVIQN4+f230HfudM7fuUn8ANAacbLEHGnfGtt1Yzl/WZYBEFlhPvCXieLLjgL8S2ugLuNjkc65358ANSjrZpSNJslYHra/ivv7n/TjtwNHcv7ObeIHgMZQHWpVB3NTJFKWJks2gPTcI7nfuSsrgnlRAADUXVXxFKklTA1N4OKJs6ybUTatoTrb8/5Tuo6XDr+d83duFD8AKLKMa5Y4GIkS0lVOinDJBkBkZRvrkf9c8BwFXHhrwLVRQHOw1vZzvH+qH2fiEwved6v4TRodyQeYo5xxuZIMgMunvwnHUUDy4rRro4DmkP0G8J/HDi14z+3iBwDN6baXEQWUZAC8Pv1NRBRgPbX+oK3HH7k0joGJ0az3vCB+AAj5NMfbWGoUULQBpMsTc/r0NxFRgOWEbB7IOnY2e9TfK+IHgFqNwcOHkK6HYi+0Ffvxog1Ak/Btnp/+JorPB0meuywRBVSGT7a35t/g2Mjsz4QA/rA3xA/Yf+/yIctS0SsFizKAR/f2aDzk/BcFIfAFswUvooDy8cn2plaPJSbnzhUKQlK8IX4ACDg5DZgFub/YlYJFGUBciXwNDHb3KRdZVSFnfJH8S2sQWBth3SwA7owC7OTMRHrzFdWvQfHxUdPBpBLxA0CQwRgAkK4iLEnqPcV8tigDIJTex+RKKkCdNxZQe4Uz2WyFSF6cxsjhT1k3o2hkm3fQTegpEAKofj7St00qFT9zSHGaLfi/+2AsWkcJ+Rrr6ymV+VGAWqPxEwX8/qRrCojqhm7r8ZfX1ELRtKzZG9a4XvwAANJezGBgQQPwSfQeNwz+5YLXKMBIGRg5erryA3mAiD8E1c8mVM6FleJP6faaZyEUWS4YBRSO7whxXfhvkisKCF1hf157MQy7JAoYn7K3yGlzbQTE5m5GsVj95I8nE6wv6duFPrDonX8o9kIbAW5mfRWVMD8KWPLZFiztaGU+NUgpMPg6/wVE7X6KrVnKx8pNO8J+XTdYX9by7t5dmxf7wKIGIEtyUSOJPDM/CgDSswJNt6xjbgSXPh7G2T/wvZfA8KVxW4+/ItLg7Kq5HNjV5x+ZtPfeFYMEcvfiv1+MIkcSeWd+FGBiGkHDF1dCrmXTDx3pO821CZyfmaazk43N7GrK2jngd8GBe1cICnLPo3t78n658xrAtteiHTxU+7UCWVWh+PJnZQWW12H5V65gZgQ8m8DJsQu2n+P6FWuhSc4nANk92n86I8uRFQQITMqRvJF8XgOgLpz7X4x8UUAmphEs+cIKx4uL8moC/RftN4CgT8NXWi539LqcmOo7Pc7eAABAWiSSz2kAMyHD11k33NKbIMuLRgGZhFbWo/mrbY4bAY8mMDadwPlxyzajzcvNK69EW7jekWtyQvyJ5HTe2obOQzrzpQbnNIB06i/hY77MQoqJAkyIRGaNIPL55SCaMyHqSN9pDL7xIT/pwgQ4ftb+nAVFlvHf19+ARs3e5cdOJfl8fG4QhJ/cJuRLDc7TBaAVbTbAK5IsQ9FKG3EmEkHN6gYs/1ob6tqbHTGCix+cxeDrR7kwASJJ+PD8oCPnCvsD2LLhZltmBTRJxl9/5ibHMvxOXDgLQvjIb0iTW9M5W0iATaybaxdaKAh/OLRgarAQkiIhvHYpln+tDbXXNoHI9tr7+NHzXJgAkSS8d+40EslpR87XEArjf17XaWl3oCUQxoPXbcLlDc7lHLw9OABwFAGA5Nb0AhU8GIvWKRLZybq9dpKOBDTIigxqGCWJjEgEWn0IobUNID4JyQuTgE0anb4wienJOGpWNoAwiiepriMxPY014Xo01TnTK9QUFZ9ZugI+ChwfH67oWF9atgp3rf886gL2di0yOXl+CK98/CfIqsLRCkcSuPlb9+x+49lfZQ1MLBjh8sneffrPR1ZVyKqK1PQ0kpNTMIziM7dkn4y6tmWoWdOAif4LGD9kzzr/8aPnAQDL/6yNyYIZMlNc5Z3T/bhmpXOzwpqi4ta1G3DDirV489Nj+M/Tx0v6+y8tW4UvXXYFGkLOFuYEgA8GTwIAd4VNJAmbALyb+V6OIW7awVfsYj+KzwfF56vMCFYvwcj7g5j65KLlEQFLE5Bm5uf/4sZbQSl1PBIJ+wP4yrprsHH1epwYOYvjI+dwcmIU/ZdGsz7XEgijNbwE6yKNWLNkGbO1+Cldx96BowDmzJMfaAeArOh+gQF4uf9fiFkjSCQwHZ8qqWsg+1UsvWEVEusu4XzvCVDdWhdgZQKSIuMfb/82ADDrhgDpiKCtsYX7Zbpvn/gQcT29yIu3CCDXOECWRc0U/mxn3U7WKJqGYF0ttFCgZLFp9SEs3dhqyyAhi4HB7bd8Peu1uRGrYCGTiSm8MLPBCSGEPwMAWTK/bHiWAVRT/78ghMwagS8YKOnp5xUTmC/+9G2pru5hKRzsPzr79JeLTDpzmplxgLnXmS8IaNnbDHsWQqD6NQQitfAF/EULwO0mkEv8JiIKWMjIpXG8fOz92dey6mwqedGQbI1nGQCt4v5/IQghUAP+DCMo/DduNYHFxG/eC0E2e4++N/v0BwBZ4TMCoCA3Za4OnDWAbbHoaq+s/rOTWSOoq4Pq1woagVYfQuOmNbZkEI4fPY+Tr7wHI2Vd0Y5C4jcRUcAc58fHEPvko9nXsqpwVeMwEwIEEmrkJvP1rAFQ2bipvENWJ0RK7z9gGsFi+CJBLNu01hYTmDo1jk/+45AlJlCs+IG0EQoTSLPnT9k7G5eabu40ukEXGoBBSSvrhrkR0wiCkdpF/+PVGo1rEyhF/LPXLroCiB15FwfPnJx9TQigqHyG/yYSIatnf55tOEjJe4sL5iCSNLPOoCZvt4BXEyhH/ALg/U/6setoX9Z7qt8PrpYB5oAC15k/zxkAoetZN8wLyKoCrcY9JmCF+KuxK/DpyHn8/N3fZb1HJMJVifN8EMxpPXMWoJV1w7yCW0zAqid/tY0HjMcn0fPWvqxRfwDpnak5f/qnIUvSSX8zBpCuFuK9AiAs4d0ErA77q8UEUrqOf//DfpyJT2S9L8kSRyv/CqPBWA/MGICsqCL8twFeTcCuPr/XTSCl63jhj6/nLPXlCwZc8vRPY0jSnAEYhuj/2wVvJmD3gJ9XTWA8Pol/eeO3eP10/4LfyYoMmfOR//lIBG2AOQYw80JgD7yYgFOj/V4zgaGxYex87eW8RT7VoAu3zqR0LgIglIgIwGZYm8BTnXc6er1eyRE4fHoAO157eUGf30QLBSArnOb9LwYhcwYAImYAnKAYE2j+8uWWb06y++c7mF63W6OB2JF38U9vxRaM9puofg2Kxv+0Xy7ozKwfeXRvjzalRKZYN6iaMHQdUxcn8gpDn0ri7GsnoF+sfHdZ1uI3YVFNqFzOj49hz5/ezsrwm4+sKvDXhFw18DeflK6vVyZIuNWFAYyrkWQZ/tqavCYg+1Usu6W1YhPgRfzAXJeAZyMYj08idvQ9/HbgyKKfkyQJWsjd4gcASSatiqrIzS6N0FyN3SbAk/gz4dEIEslpvHH8MF4+9n7ecH+u/YAWDnG72q8kqNSsUGo0F9okWGAPdpkAr+LPhAcjSOk6+k4ew6+P9GFkunAvmBBAq6nhsNRXudBmxaCS3wtm5lasNgE3iD8TQgj2vP8W2pouw9plyx0559DYMN47dQK9Jz8sSvjATNgfDnlI/AAB8SsSEGHdkGrHKhNwm/gB4G9eegYA8P8+/gDNgRrc2LIWrQ3L0LJkKYJa8Xs5LkZK13HywlkMDJ/FHz7tx8DEaEl/LytyevbGY09KQqApFIh467LcSaUm4Gbxm5yJT+ClY+8Bx9Kvr65vwrr6JtT6A7isvhFBn4YlBTb6mExMYWRyAqdHL2AiMYWPh4fQd678zU0VzQfNZWm+xUObxQQAR5RrAl4Qfy4ODQ8x3WJbCwVcO89fLBIhdHXlhxFYhWkC+QbGTBMwk4W8Kn6WyEr6/8Dr4gcgUgB4JG0CYSTGJ3JuU2aawNN3/zXrppYMz+KXJAlq0O+qZb2VooCS5irbCtAVSLI02x3IZQJC/NZBCIHPFL4n+/p5iSgg1F9tm4G6BSLlNgFzrz43waP4CUnX8FP8GjdJSU5CgYhCQfzVd+nuYb4JeFH8ql8DpRT6dNKRhUOyIkPRNMg+tSqFb0JA/ApAm0UEwDemCTzZcQfrppRMIfFrNcG5PncI0FMp6NNJ6MkkDL34bdoXgxBAVlXIqgJZVUEkkfk6w3IxCOgSPC/+GWRFmVlfHwA1DOjJFKhhgFIKQ09XNjJ0Pe+WaERK78orK8rMzwokxTvZe1ajEBBr0q0EtuHGuv0f/Mf30SRdhiEj9zMml/jnQySJ+1123I5EQUUtAI5xo/j7X/1fCEop3OE/hSZp4eq6YsQvcAaJAKOsGyHIjVvFb5LLBIT4eYKOSBAGwCVuF79JpgkI8fMFBUbFcCiHeEX8JkEphfuWnsdKv/i68YYE4ATrRgjm8Jr4AaCuRsPSAPA/AgNYLqWKPKrAbghwQlgyR3hV/H4tvWlGjZQUJsAZEkDOsG6EwPviNxEmwA+UkjMKpUhUcTZkQdaEIohofqyra0RQ9aE+EFr085eS0xiJX8LAxWFcnI7j6PhwwXNUi/hNTBP43/HVGDRELhorCKFTCgWdIiIVeJY1oQiujDRiVV0DVtY1QFPK2/PtBqwDkC5HNTg+ghOj5/DR6LkFhlBt4jcRJsADZEoRXQCgJRBG+9IVuKZpFSIFnvClosgyVkaWYmVkKW7BVRifiuOjC4P4/dBJ3P+5TawvvWSsEL+JMAG2UIqhqr7rV9c1YtOqNqyMLHXsnGF/AJ9rWYvPtazlqjZ+MVgpfhNhAmxRZAknqm1jkJZAGP9t7TVorV/GtB081MYvFjvEbyJMgA0UOKHQlDEFuTpmAxu1IL66sg2fXc5XGUTejcBO8ZsIE3AeiRhTSgLSEa+XPqxVffjqZW34bPOqsgf1nIAQMlsQgxcjcEL8JsIEnMXQpSMEALb2Rk8DcGZbFodpCYTxrQ03WT64Zzc8RANOij+TCUMVJuAA/tSomZxNj1R2KD5pr2/Gd67b6DrxA9nRAAtYiR8QyUJOQEH7f3DrlsSMARDPGcCXV6zDXetv4DrkL0Tm2ICTsBS/iTABeyE0rfm0AVAcZd0gK7n38nZ8Zd01UDyykaOT0QAP4jcRJmAflNA5A6DEGysCa1UfHtjwRe5G+a3ACRPgSfwmwgTsgVAyAMwYgK7rnugCfGv9F5jP7duJnSbAo/hNhAlYj0GMuQjgh513HaVAnHWjKuHey9sdzehjhR0mwLP4TYQJWIyuvwOYYwBIFwdg3aZy2dxyhSfD/nxYaQLH/pN/8ZsIE7AGCsR3dH5jCMgwAFB3TgW21zdj4+r1rJvhOFbkCPzVszvxmwt10PN4CU/iNxEmUDkkY9p/zgCI+6YCWwJhdLVd75nR/lKpJAr4q2d3AgD6pnw5TYBH8ZsIE6gMSslCAzBcNhVYq/rwrQ03uXqev1LK7QqY4jeZbwI8i99EmEBFzGp9LgIw8A7rVpXCf129wZUZflZTqgn81c935nzfNIFQyM+9+E2ECZQJmdP6rAHs6Ox6F6AjrNtWDI1aEJ9ZdhnrZnBDseMBf/PSM9CCobx7wX4gRfDKxUakKB8LkYpBmEDpTOvYZ/6cvQ6Yzv2CZ25bfVXV9vvzUSgKMDfqlFQlpwn4gkHIPhUH4xpeOhcRJuBZaN/Ozq4x81WWARggL7FuXiHawvXY0LSSdTO4Y7EoYP4uvfNNwBS/iTAB70JptsazDEA2+I8Abl1VfVN+xZIrCsi3RbdpAlooW/wmwgS8iSRlazzLALZ3dg1Q0H7WjczH1XWNnk71rZT5UUA+8ZsEltQiWL8E+YIHYQLeggJxLTn6ZuZ7CyouEGAfgDWsG5uLzWuuZnr+8fgkTpwfwvlLF3Fq7ELW75prIogEQ7h82QosCYWZtdEsJFJI/JkbdWo1NUhMTCDXMMLBuAaci+D2xlEoxB3FI0VlodwQ0Dd/cOuWROZ7C+6OQcl+iWAL68bOZ00ogmXhOibnPnx6APuP/wmHhocW+dTJ2Z9W10SwsbUN17de6fhgJSEEv3xr/6Kfmb9Lr6wqwgSqAErJgi/GgmqgvI4DXL/M+YG/j88OYue+/4t/eitWQPzZDEyM4heHDuLvX42ib+CY4+2+tqU17+/ybdFtmoDoDniX+f1/IIcB8DoOsH7pCsfOldJ1/McHf8QPD7yCj8bOl32cM/EJ/Oyd1/GLg3uRSE471v4rmi5DQF741MsnfhNhAt4lV/8fyGEAwOw4ADe0hesR9gccOVciOY1nD76Kl469Z9kxD545iX/ofRnnx8cqP1gRKLKMm1ZkD+MUEr+JMAFvkqv/D+QxACNHX4ElV0QaHTlPIjmNnjdfRd+505Yfe2BiFD2/j2EyMeXItaxtaJr9uVjxmwgT8B40j6Zz7whiJH/DU4GQVgcMwBR/KX39UhmYGMWud95AStdtv57WpWkDKFX8JsIEvAU1sDvX+zkNYEfnN4YIJ2nBmiRjeXiJredwQvwmB8+cxJsfH7b9PEtCYVy+rLks8ZsIE/AMh9NrfRaSf08wYjzLutUA0Bqqs3UqrRTxS5IE1a9BCwXhr63J+qfVBOEL+CEVsc3aS0ffcaQrsNaCpClhAu7HoDSvlvN+W/2pi7t5WB3YHKy17djFil/RfAjUhRGI1MIXDEDRfJAVJeuf4vNBDfgRqKtFMFILX8CfNz8/rqdwsN/+8guNAWsSkoQJuBwj9Uy+X+U1gJkRw92s294csscAihG/ovkQjNRCCwUhlRCFEElKm8GsESz8zMvH3rd9arDRwoxEYQJuhcbM+n+5WDReJYQw7wbU+oOWH7OQ+AlJD55poSCIVP7OyYQQqAE//OHwgmggrqdw8sJZe++dz9qpU2EC7sOgi2t40W/39lu69rNOCgqp5Q9i5aKw+An84XBFg2fzkRQZgbowZCU7ijh2btD6G5ZBwOJ7BwgTcBMUiAf10V8u9pmCjzcC8stCn7ETn2xdeaqixF9bA0mxftCRSBK0mhCINCeMQ2c/tf6GZeBT7MmBFybgEih250r+yaSgAaR0nWk3wCdb8yUuWvw2zjjMmsCMLhK6vV82OwumChPgH1rETF5BA5jZNegA64upBB7EbyIrCtRAum9+Jj7B+tZUdi3CBHhmcMfGO18p9KHiRrgWmUe0G7mCQTiAL/GbqJovqyvgZoQJcMszxXyoKHVRI7WbVWqwbpSfNsuj+GdODF/An3PFnhvxsgk0EPvTtu3A0PGrYj5XlAGkU4Ppb1hciG4YZf0dt+KfQfH50BS0t3KQE2sOTLxqAncHTkGDO4qgzEH78qX+zqfo+NowyOMsLmVyOlHy3/Au/plGYHmdvWsc4snS710leNEEGuU47vLbv0bESiiK12rRBrCjs+tdUBp1+mIulZgz7wrxz3B1s71VjnS9vOipErxoApero1gnO2um5UP7ntrYVXR5/5JG2FhEAWPxS0V/1k3iB4C1Dc22Hn9kcpzJdXnRBDaqFyo/iAOU8vQHSjQAFlHA6bHi1iO5TfxOVDm6MHGR2fV5zQRWqRddEAWU9vQHSjQAwPko4HwRTzG3iR8Abr+i3fZzFGueduE1E/iMUnw0yoJSn/5AGQYws4lozKmL6jv/6aKr5two/i8tW4UGB/YOOD3OfDW3p0xgjcymS1UMFLS/1Kc/UIYBpE9Gdpbzd+VAQPKumnOj+Bu1IDpXX2X7eRLJaUcqHBWDV0xgiRxHDad5AYSWp8myDCDtNLTPmSvLvWrOjeLXJBn3rv+8IxWOPz43iCJ3DXcEr5hAE5/ZgYN+ffQn5fxh2Xm25fQ3yoFIEt44dTzrPTeKHwDuvfJzWF5b78i5Tlw4C0IqS6O2Gi+YQC04jAAothda9ZePsr8hTkUBRJIwMj2FobFhAO4V/1+uvwFtjS2One/twYHZ7b95wu0mUMNfBFD20x+owAAAZ6IAaWYx0InzQ0L8RXLy/BDOxCe4uw8mbjaBEcO+JdZlUcHTH6jQAJ7a2PWS3XkBZKbK7pufHBfiL5IPBtMblfJ2LzJxqwmMUZ7uKe17sqOrogH5ijuJhpF6wM6VgpKUvuEfjZ0X4i+ClK5j70C64jApokQ5S9xoAiMcGYChk4p38a74G7Kj8xtDlFLbugKSIuctrw0I8c/n7RMfIj5TaYi3e5ILN5nAmYSGCX4M4OliV/wthiWPiKA+9mM7BwRlX+5+lxB/NpOJKbxw+O3Ze8PbfcmHW0ygP66CUi6WBg8mdDxixYEsMYAf3LolQQj5nl1XK6sLC2cI8S/kYP/R2ad/PtPkFTeYwDuTftAy61NYiUHxyM7OLku2mrask7j9lq79AO2x44JlNfvLLMS/kJFL43j52Puzr3OZJu/wbAInJv3oTyqgBusIgMZ2dHRZVqLP0lEiQ089Ysd2YoSQ2Zr6Qvy52Xv0vdmnPwDINlYEthNeTeDVsRAAgFJ2EQAF4oZubaRtqQGkBwSt6ZvMR1ZVIf48nB8fQ+yTj2Zfy6ri6qKjvJnAofEQjk6nDbWSnaIqhQA/tmLgLxPLr+apjjt+akcZcdnnE+LPw54/vZ31WtGs3xHIaXgxgVNTGn4+PLdyk1V6NQXt96dGLZ9ts+VqqA7LcwMkWRLiz0HsyLs4eObk7GtCAEV1Z/g/n2JNYFq3R5TD0yqeOVeX9R6ryIqCPlBJxl8+bLlzOzq73iU2dQV4gQfxv/9JP3YdzZ59Vf1+cLUMsEKKMYGfDdVjPGXtV/nUlIZ/HlqCi8bccWVVWTQnxS4o6I+K2eSjHGyLZ57s6NrJooioE/Ag/k9HzuPn7/4u6z0iEah+jWm77KCQCfQnFewcXIozU9Z0fQ6Nh/AP88SfbgeTyOpwIDVm28PU1g5NwiBbWO8ubDU8iH88Pomet/ZljfoDgC/grad/JoVM4KIh4YdD9fj1uQiGp8sT6olJP3422JDV589ug7MGQIF4Ste77Aj9TWz/tmyN7bqRylKMAPZXwbAZHsSf0nX8yxu/XbAuQpIlBGrDnjUAEz2ZQmJiAoUS8m4MJHBVMIGV/imElfxTd8PTKgamNLw5kZ7nz4fiU6HVhBy9VoPi21bO+efCkW9L9/4Xt0mE/L0T57ILXsT/wh9fx+unFwZV/nCIVYjqOMWagEmbL4mQRBGUDKzw6Tg2lb5Pp5IKzhY5gBioCzs8CE17ntx4x1/afRbHHhdbe1/cC5BOp85nJTyIfzw+iX//w/6cKyJlRYa/1v4iozxRqglUgurX4As6GsAe9qdG2+0M/U0cm9Q09NQ3AQxWfCCH4UH8Q2PD2Pnay3mXQ6vOfjm5oNCYgJXncVL8TvT7M3G0w7jttWgHpdjn5DkrgQfxHz49gH/942sLBvxMtFAAiua9kf9iSUcCl2xZpScrMrRwjaNTf070+zNxfMTo4f3RxwjB950+b6nwIP7YkXcXzPNnwiA05RJDN5AYn4Bh4Uq9dIQRcnben9Lokx133OHcCR3sApg81dH1OCj2OH3eUmAt/vPjY/jFwb2Lil9WlfS0nwCSLMFfF7ZsBaTq1+B3+MlPQfsTRuUVfkqFyZpRvz7aNaXUHQCI/ftjlQhL8Y/HJxE7+h5+O3Bk0c9JkgQtFPL8lF8pEELgD9dATyaRjE9BT5VevlvxqVADfhYp54OSTjqtWuNfCsy+QQ/GonU+mfYRkDWs2jAfVuJPJKfxxvHDePnY+3n7+iaEAP5ap6ek3IeeTEFPJqFPJxftGsiKDFlVIft8kJjUUKQjhk46rV7lVyxMHyHbYtHVVMYBAMtZtgNgV8Cz7+Qx/PpIH0ampwp+nhBAq6lxZbEPlhi6nh4kpBRGSoc0c/8kSWa6bJoCcYngtnQxHTYwjyG7Y9FrJZnGALKEVRvawvXYuPJKrKxrgOZAIY2hsWG8d+oEek9+WJTwgZmwPxwST34PQYGvl7Ohp5UwNwAA6O7dtZlAivKQLtxe34zP1C/HqshSRALWpH6mdB0nL5zFwPBZ/OHTfgxMjJb097Iip+e8XVzkQ5ANpfT+pzru+CnrdnDzjXq4N3o7AXazbkcmTVBxTf1y1PoDCPr8qK9JZ9stCdYgqOUegZ9MTGFkcgKnRy9gIjGFj4eH0HfudNltUDQftGBADPh5CErx/ac6uhzZW7MQXH2rHt7/4ncIIWXvc2YliUuTSCWmmbah2pN8vIkzOf7FwpUBAHwkCrEWv6zIUIMByIoY7PMUDBJ9CsHd3lHp0Mie8uLFwFL8kiRBqwnCXxsW4vcaFHv8+tg3WTdjPtxFACZbe6N/BzhbVoyV+Akh8AX9UHw+0df3IpRG/frYN51a4FMKXH/btu6PPgiCHztxLhbiJyRdw0/xa0xqzQmcgK8+/3y4/9Z174/eRwietnOK0NB1JKcS0KeTjuz9JisyFE2D7FOF8D0MT6P9+XDFt8/JPAE9lYI+nYSeTMLQrVldRki6npysKukNThhuLiFwBl7m+QvhCgMA0rUFIZM9TmYMUsOAnkyBGgYopTD09AITQ9fz7hFHpPSuvLKizPysQFJE9l61QIE4gbHlyY13/op1W4rBNQYApNOGiUyjPC0gEgjmoCOEkC6Wuf2l4ioDAGYXEO0BcBXrtggEGQwaOm5jtaqvXFxnAEB6KbGWXkDEXT0BQfVBQfslnXRu7+waYN2WUnHlaNTOzq4xf2rsZgBPs26LoMqhNDqtk3Y3ih9waQSQSXoREe1huZxYUH1QIA5Kv+eGkf7FcL0BAOlxAUPGcwS4mXVbBFXBYUPHN93W38+FK7sA89ne2TUQSI12AniCdVsEXof2JHTc7AXxAx6JADLp7t21WQJ5TnQJBFZCgTileMDJmv1O4DkDAIDu2PNNRFajoksgsIjDKV3v+mHnXUdZN8RqPGkAJjzUFhC4nqf9qdHv8biSzwo8bQCAmUIs9UAkDglKY9CAsWXHxjtfYd0QO/HEIOBiPNl550F/arTdoPRvKRBn3R6BK3gioeMqr4sfqIIIIJPu2PNNkqT2gOA21m0R8AcFDlAdD3hlhL8YqsoATNLLi8nTYlGRIA0dMSj5ntdG+IvB812AXOzYeOcrgdTYVQCeEN2Caof2JHSyphrFD1RpBJDJQ7EX2hRJ/pHoFlQdh6EbW57svPMg64awpOoNwGRr7667KcgTolvgdeiIQbF9R8cd21m3hAeEAcwjXYOQPiaMwHMMGpTuTBrkJyy24eYVYQB52Nq7626AbBM1B1zPICi2+/XRn3g1macShAEU4OHe6O0Atom0YndBQfspJY9X6+BesQgDKJJtr0U7KKWPAaSTdVsEi0H7DEp2CuEXhzCAEtka23UjJLINhHSxbosgE9pHQR5/amPXS6xb4iaEAZTJQ7EX2hRZvo+C3iMGDFlBRwDyS+jGs9U+nVcuwgAsYKZ7cB+Ar4s6BPZDKZ4jxHjJLbX3eUYYgIU8urdHm5Qj90jA3SKxyFoocACUPjttkF+KaTzrEAZgEzMLj+4BwXcgliKXBQXtByXPSgaecWvVXd4RBuAAD8VeaJMl+R5CaIeYRVgcChwgwD7oxkuiX28/wgAYkK5bKHVQYJPIL6B9FNgHkP2B1OhvRLKOswgDYMyje3u0SaV2kwSpA6Bfq4LMw8MU9DcA2T+tY5/oz7NFGABnPBiL1vlkbALFdQS4EYQ2u9gUDgP0DKVkPyHGEUPX9+3o/MYQ60YJ5hAG4BIeir3Qpipys2FgEyFoAuh6ANexnnZMb4dN3wRwglIyQInxJnTpTDVV1XEzwgA8QDoPwWimVFpvvkcIXQ2gdd5HrytkGBmCnnuPkjMAMkpi0zOSRI5MpfCOCOHdzf8Hsm/xRxHDhnQAAAAASUVORK5CYII="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_TitleLeft_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 1560 << !!A_IsUnicode)
B64 := "iVBORw0KGgoAAAANSUhEUgAAASEAAAAqCAMAAADLcx1eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAEaUExURTZAUjY+UTY+UDY/UTY/UjU+UTY/UzY+UjU/UjU/UzVAUjY/UDVAUzVAUTU/UTZAUSoxRFtbYGdnbWZnbGdnbGZna2Zma2ZmamZnaWZnamVna2Vma2dma2dnamVmaWVnaWVnamVoa2Rna2VmamdobGVlaikxRFpbYD5BRj5BRT1BRT1BRj1CRT1BRzxBRj1CRj9ARz9ARj9BRT9BRj5BRz5ARykyRFlbXz5CRT1CRz5BSCkyQz9ASEBBRj1ARVpbXykzQllaXigyQlhcYD9CRygxQj1CSCkyQjxAR1hdYD1ARj9ARUBARikxQlpcYEBASCkxQFpcXzxBRT9CST1ARykxPykwPikxPj0+QxwlMjg7QBocIhwdIRocH7QX1ZkAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAMBSURBVGhD7ZprV9NAEIa3JoZbEa1sgKYKtl6SBizSclUDWBTxgoj3C///bzgzO2kKXbaifuB45vmQnXl3djZ9G3JYDkqVrpQ8wPdLV3H0ghFDEPi+XQ0IiFHwARQxOy2MIpQEMAsCLM4HGH1QgSAYHSNQRWgZ5OM+bDsxMYG3NsJ74q60hnoEdGdeqUQfABkvl8tjtJ7mg2AMhDJ2n5ycvIYT41zpKSzM98WmHu7neVNTKlfMPur6jcrNSqUyrac1EfZjVwmjaz0zC8wAEGo9NzdnsjCcqepIR1xt0CCHYS2s1Sglarduz87PLyws4BJsF96pV6vVKKyapiGtOQcsMYQ1vEawLoxgOWxCRJTV6/VIN/TdRqOhsQwvYRRpHQFYdg8vOINg3Ie6/yDukTSbzTRN6QLD4iINSLp0Bqpww5UFVjFG9WGatnBElplHZmfL3j3iJElW2sAKBM1mkrR57fJyZ2l1dZVjJMZGgGkJDH4i6pI0k5gFRq2tsz1AO+4QJks2Nkxu0gvTYlLOkZS1PvGswHmr9RsbF46Tub3uPbs5JTaJvGlvivM47nAXTnNOOdRBE5F4ixXOE04vBH65CKcG1gqR80Khu0TyzVm30F45A+tFV24FcAU9J4jlTriC0xz1uM+hJXxitvqfGhSQrRzWL8DAlzKEJzl4IwjrFrigoP2U4YLCKi4o4M/T94l4otjPzJ9y6FKR8fjnZH/fAlBr2xwJdtTOZX2GLgvi0DDUzi5Hgh31rPtvXmj/LeDQ5h7Hgg31vPtCniEXar/7kkPBRgYO9Y4YwiDZnnp8IA45wVOHOOQgE4fcwE/Z2vYrccgFnDrEIRcZnsvEIQfg0K445AROHfFrjoVB4E0NDhV/sxQGyOBcJg45wVOHOORCHBoC/E59IA45UfsH8RuOBRvq7WH8jmPBhjg0DHW0nopDLtTR+1ROHS7U0eGxOOQCHfrAsWAD30MfORZsqE+H4pATdEjeQy7UZ3HIjfrSPf7K/9on2FDfvv/4eSKcx8nJL8EqjJtrOZOGAAAAAElFTkSuQmCC"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}

; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_TitleRight_png(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 1652 << !!A_IsUnicode)
B64 := "iVBORw0KGgoAAAANSUhEUgAAAEcAAAAqCAMAAADWBLapAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAF6UExURTY/UzY+UjY/UjY/UTY+UTY+VDY+U2Zma2ZnbGZmbGdnbWdnbFpbXigyRD1BRz1BRj1BRT1CRz5BRSgyQj5BRj5BRz1CRllbXj5BSFpcXygzQ1hcXygxQlhcYCgxQUBBRj5CRUBBRVlcYCgyQT5CQzw/RD1ARUFESUlMUU5RVk1QVUhLUEBDSFFUWV9iZ2dqb09SV0VITVhbYGVobVdaXz5ARWNma2ZpbmFkaUxPVD9CR4aJjqOmq6KlqoKFiktOU2hrcJqdopueoz5ASD9BRVNWWzs+Q1JVWqGkqaWoraSnrHl8gaCjqHp9glBTWGRnbJean5WYnUJFSm1wdUZJTj5AR1ldYCcxQIuOk4eKjz9BRmdpbkpNUp6hpp2gpVhcXigxQGhpbigyPygxP25xdqOlqpyfpDxCRT9CRp+ip6aprjtCRT5CRllcX1RXXIOGi5mcoWlscT1CRT5ARjxAQzxARCkwPhocHxscIBocIRsdIBseITo8QBwkMSbI6j4AAAAJcEhZcwAADsMAAA7DAcdvqGQAAALkSURBVEhL3ZWJVxMxEMaXUoECulhDrRfg0SiHLGUrwTWRG9oVCijeKCKCJx544Pm/+02SthbUJ23f0+fXvk0y2fwyk8m0jlVdXZ15RiKRXYYIGj2uj0aj9VCEHlr7GhoaMBF1GsvVZNuiygwxqDnWGGvRneZYrInU0tS63znwG7k/UZuWe9CN/6DWQw7bk9ohat1EGefwXjnMLiz1tMBJJvUGf6gkOWR8sgitI0f36k9JFqH1v3KOHa8N50TH3+cYtXW6XezkqdPVchKMnUl1EoczfvZcd09vHzr4aOnO+X6vf4DzghEtOulB38+kMbLmBOJjF8DBaGBI+L4YvsiDwpqAsZ5LUiqpLo9YE4GCYHQMNjnu9QXW7E5MwiUdV0Z4QghfiKnSkumZrMxJFaqs6p62tiDFr6hwNlQylHM8hU0hy+lwUnnP931P+PO+N0Ke0xLWuyCzuWwWLoWLaWtNBR7QSkqZUzkvSGljkXN1CM5YDQdmkxS7BvdDia2x0McY4jw9TqFCeIwvGXjb9clEwG/cdEYsQyttJhm7pd+HwlDdNuFylgm1xdgHjZU47A78mRHirqUIsWw4nN/TL5NCeb8Q7bw1aAljNHGtPCDO6qrF/Iwjd3KsyjkPKa7VImhXXNh8Z1xGhbhcioutrOGckXFkjDI/3EdTdM6PiLO+HkokXphzZjy9gUzhkEOkYMOec3v88QR7Ag7PjwKC3M8LD2GZrXnvggqRLxk+VYtLhbwz75mivANTzHuy6/kEe7G55rAgQ9eQ7uFLUMwSPj01a5Izm+02C/Q9nFNwCFexdA81Jw4OD1ieQrN1YaTrgkLLvlq2aAKhLl7DSTX2JijUheH8sk5JM6jTPLrWiBZfqtPBJXrDmEuc6vTvcbaIU/XvajJeIw5DXFTvdlypNKcG/rTHiYN6t+OKpfOFerfDimU4qK8qVVMO1XuVKnDsP33l2nr77v3mB2e7Sn38tP35y9dv3wEpsmzKgHPKcgAAAABJRU5ErkJggg=="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}